const { dest, src, parallel, series, watch } = require('gulp');
const { transform } = require('gulp-insert');
const { sync, logError } = require('gulp-sass');
const { createProject } = require('gulp-typescript');
const del = require('del');

const destFolder = 'public';

function assets() {
  return src(['assets/**/*']).pipe(dest(destFolder));
}

function clean() {
  return del([destFolder]);
}

function sass() {
  return src('src/sass/*.scss')
    .pipe(sync().on('error', logError))
    .pipe(dest(destFolder));
}

function javascript() {
  const tsProject = createProject('tsconfig.json');
  return tsProject
    .src()
    .pipe(tsProject())
    .js.pipe(
      transform((content) =>
        content.replace(/(import\s+.*(?<!\.[tj]s))(['"];?\s*$)/gm, '$1.js$2')
      )
    )
    .pipe(dest(destFolder));
}

function watcher(cb) {
  watch('src/**/!(*.spec).ts', javascript);
  watch('src/sass/*.scss', sass);
  cb();
}

exports.watch = watcher;

exports.default = series(clean, parallel(assets, javascript, sass));
